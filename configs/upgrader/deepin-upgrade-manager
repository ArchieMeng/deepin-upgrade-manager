#!/bin/sh
PREREQ=""
prereqs()
{
    echo "${PREREQ}"
}

case "${1}" in
    prereqs)
        prereqs
        exit 0
        ;;
esac

. /scripts/functions
. /scripts/local
. /scripts/nfs


for x in $(cat /proc/cmdline); do
	case $x in
	# The following lines blocked for security reason
	back_version=*)
		back_version=${x#back_version=}
		;;
	esac
done

atomic_upgrade_config=${rootmnt}/etc/deepin-upgrade-manager/config.json

repo_records_point_key=repo_mount_point
repo_mount_point=
if test -e ${atomic_upgrade_config}; then
	repo_mount_point=$(echo "$(cat ${atomic_upgrade_config})" | awk -F "[{,:}]" '{for(i=1;i<=NF;i++){if($i~"'${repo_records_point_key}'"){print $(i+1)}}}' | sed 's/\"//g')
fi

if [[ -n ${repo_mount_point} ]];then
	if [ "${readonly}" = "y" ]; then
		mount -o rw,remount ${rootmnt}
		readonly=n
	fi

	if read_fstab_entry ${repo_mount_point}; then
		if [ ${repo_mount_point} != "/" ]; then
			mountfs ${repo_mount_point}
			log_begin_msg "Mounting ${repo_mount_point} file system"
		fi
	fi
	echo "will rollback to ${rootmnt}${repo_mount_point}/osroot/snapshot/${back_version}"
	deepin-upgrade-manager --config="${atomic_upgrade_config}" --action=rollback --version="${back_version}" --root="${rootmnt}"
	if [ "${readonly}" = "n" ]; then
		mount -o ro,remount ${rootmnt}
		readonly=y
	fi
fi

